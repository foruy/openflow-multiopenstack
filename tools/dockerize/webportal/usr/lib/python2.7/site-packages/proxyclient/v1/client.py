from proxyclient import client
from proxyclient.v1 import tokens
from proxyclient.v1 import servers
from proxyclient.v1 import centrals
from proxyclient.v1 import gateways
from proxyclient.v1 import firewalls
from proxyclient.v1 import security_groups
from proxyclient.v1 import proxy

class Client(object):
    """
    Top-level object to access the Proxy API.
    """
    def __init__(self, insecure=False, timeout=None, timings=False, bypass_url=None,
                 os_cache=False, no_cache=True, http_log_debug=False,
                 cacert=None, connection_pool=False, session=None,
                 auth=None):
        self.servers = servers.ServerManager(self)
        self.centrals = centrals.CentralManager(self)
        self.security_groups = security_groups.SecurityGroupManager(self)
        self.gateways = gateways.GatewayManager(self)
        self.firewalls = firewalls.FirewallManager(self)
        self.tokens = tokens.TokenManager(self)
        self.proxy = proxy.ProxyManager(self)
        self.os_cache = os_cache or not no_cache

        self.client = client._construct_http_client(
            insecure=insecure,
            timeout=None,
            timings=timings,
            bypass_url=bypass_url,
            os_cache=self.os_cache,
            http_log_debug=http_log_debug,
            cacert=cacert,
            connection_pool=connection_pool,
            session=session,
            auth=auth)

    @client._original_only
    def __enter__(self):
        self.client.open_session()
        return self

    @client._original_only
    def __exit__(self, t, v, tb):
        self.client.close_session()

    @client._original_only
    def set_management_url(self, url):
        self.client.set_management_url(url)

    @client._original_only
    def get_timings(self):
        return self.client.get_timings()

    @client._original_only
    def reset_timings(self):
        self.client.reset_timings()
