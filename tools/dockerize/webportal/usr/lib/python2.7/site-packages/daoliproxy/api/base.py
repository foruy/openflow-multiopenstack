from webob import exc

from oslo.config import cfg

from daoliproxy import utils
from daoliproxy.db import base
from daoliproxy import agent
from daoliproxy.api.openstack import wsgi
from daoliproxy.openstack.common import threadgroup

from proxyclient.client import HTTPClient

CONF = cfg.CONF

class BaseController(base.Base, wsgi.Controller):
    def __init__(self, **kwargs):
        super(BaseController, self).__init__(**kwargs)
        self.client = HTTPClient(http_log_debug=CONF.debug)
        self.tg = threadgroup.ThreadGroup(kwargs.get('threads', 1000))

    def _build_url(self, netloc, port, subpath=None, scheme=None):
        if scheme is None:
            scheme = 'http'
        path = '%s:%s' % (netloc, port)
        if subpath is not None:
            path += subpath
        return '://'.join((scheme, path))

    def _from_body(self, body, key):
        if not body:
            raise exc.HTTPUnprocessableEntity()
        value = body.get(key, None)
        if value is None:
            raise exc.HTTPUnprocessableEntity()
        return value

    def add_thread(self, callback, *args, **kwargs):
        self.tg.add_thread(callback, *args, **kwargs) 
