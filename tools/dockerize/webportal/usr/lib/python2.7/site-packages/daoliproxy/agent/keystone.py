from oslo.config import cfg

from daoliproxy.utils import is_ans1_token
from daoliproxy.utils import get_keystone_client


CONF = cfg.CONF
CACHE_ATTR = {}

def keystoneclient(request, admin=False, timeout=5):
    """Returns a client connected to the Keystone backend."""
    if not CACHE_ATTR.has_key(request['id']):
        conn = get_keystone_client().Client(token=request['token'],
                                            endpoint=request['auth_url'],
                                            auth_url=request['auth_url'],
                                            debug=CONF.debug,
                                            timeout=timeout)
        CACHE_ATTR[request['id']] = conn
    return CACHE_ATTR[request['id']]

def tenant_create(request, name=None, description=None,
                  enabled=None, domain=None, **kwargs):
    return keystoneclient(request, admin=True).tenants.create(
        name, description, enabled, **kwargs)

def user_create(request, name=None, email=None, password=None, project=None,
                enabled=None, domain=None):
    manager = keystoneclient(request, admin=True).users
    return manager.create(name, password, email,
        project, enabled)

def user_update_password(request, user, password, admin=True):
    manager = keystoneclient(request, admin=admin).users
    return manager.update_password(user, password)

def tenant_delete(request, project):
    return keystoneclient(request, admin=True).tenants.delete(project)

def user_delete(request, user_id):
    return keystoneclient(request, admin=True).users.delete(user_id)
